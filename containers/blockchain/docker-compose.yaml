version: "3.1"

services:
  rabbitmq1:
    container_name: rabbitmq1
    image: rabbitmq:3-management
    hostname: rabbitmq1
    environment:
      - RABBITMQ_ERLANG_COOKIE=12345
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/

  rabbitmq2:
    container_name: rabbitmq2
    image: rabbitmq:3-management
    hostname: rabbitmq2
    depends_on:
      - rabbitmq1
    environment:
      - RABBITMQ_ERLANG_COOKIE=12345
    volumes:
      - ./rabbitCluster/cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
    entrypoint: /usr/local/bin/cluster-entrypoint.sh

  rabbitmq3:
    container_name: rabbitmq3
    image: rabbitmq:3-management
    hostname: rabbitmq3
    depends_on:
      - rabbitmq1
    environment:
      - RABBITMQ_ERLANG_COOKIE=12345
    volumes:
      - ./rabbitCluster/cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
    entrypoint: /usr/local/bin/cluster-entrypoint.sh

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: haproxy:1.7
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - rabbitmq1
      - rabbitmq2
      - rabbitmq3
    ports:
      - 15672:15672
      - 5672:5672

#  redis-server:
#    container_name: redis-server
#    image: redis:4.0.5-alpine
#    command: ["redis-server", "--appendonly", "yes"]
#    ports:
#      - 6379:6379
  redis-server:
     hostname: redis-server
     image: redis-server
     ports:
       - '7000-7007:7000-7007'

  shop-ca:
    container_name: shop-ca
    image: shop-ca
    environment:
      - FABRIC_CA_HOME=/ca
    command: fabric-ca-server start
    ports:
      - 7054:7054

  fitcoin-ca:
    container_name: fitcoin-ca
    image: fitcoin-ca
    environment:
      - FABRIC_CA_HOME=/ca
    command: fabric-ca-server start
    ports:
      - 8054:7054

  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb:x86_64-1.0.2
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984

  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb:x86_64-1.0.2
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 6984:5984

#  rabbitmq:
#    container_name: rabbitmq
#    image: rabbitmq:management
#    ports:
#      - "5672:5672"
#      - "15672:15672"

  orderer0:
    container_name: orderer0
    image: orderer-peer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/orderer/crypto/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/orderer/crypto/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/orderer/crypto/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/orderer/crypto/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/orderer/crypto/tls/ca.crt]
    working_dir: /orderer
    command: orderer
    ports:
    - 7050:7050

  shop-peer:
    container_name: shop-peer
    image: shop-peer
    environment:
      - CORE_PEER_ID=shop-peer
      - CORE_PEER_ADDRESS=shop-peer:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=shop-peer:7051
      - CORE_PEER_LOCALMSPID=ShopOrgMSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fitcoin_default
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_MSPCONFIGPATH=/peer/crypto/msp
      - CORE_PEER_TLS_CERT_FILE=/peer/crypto/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/peer/crypto/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/peer/crypto/tls/ca.crt
    working_dir: /peer
    command: peer node start
    volumes:
    - /var/run/:/host/var/run/
    ports:
    - 7051:7051
    - 7053:7053
    depends_on:
    - orderer0
    - couchdb0

  fitcoin-peer:
    container_name: fitcoin-peer
    image: fitcoin-peer
    environment:
      - CORE_PEER_ID=fitcoin-peer
      - CORE_PEER_ADDRESS=fitcoin-peer:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=fitcoin-peer:7051
      - CORE_PEER_LOCALMSPID=FitCoinOrgMSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fitcoin_default
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_MSPCONFIGPATH=/peer/crypto/msp
      - CORE_PEER_TLS_CERT_FILE=/peer/crypto/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/peer/crypto/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/peer/crypto/tls/ca.crt
    working_dir: /peer
    command: peer node start
    volumes:
      - /var/run/:/host/var/run/
    ports:
      - 8051:7051
      - 8053:7053
    depends_on:
      - orderer0
      - shop-peer
      - couchdb1

  blockchain-setup :
    container_name: blockchain-setup
    image: blockchain-setup
    environment:
    - DOCKER_SOCKET_PATH=/host/var/run/docker.sock
    - DOCKER_CCENV_IMAGE=hyperledger/fabric-ccenv:x86_64-1.0.2
    - SECRETSDIR=/run/secrets
    volumes:
    - /var/run/:/host/var/run/
    depends_on:
    - orderer0
    - shop-ca
    - shop-peer
    - fitcoin-ca
    - fitcoin-peer
    - couchdb0
    - couchdb1
    secrets:
      - config
      - channel

  shop-backend :
    #container_name: shop-backend
    image: backend
    environment:
    - ORGID=org.ShopOrg
    - DOCKER_SOCKET_PATH=/host/var/run/docker.sock
    - DOCKER_CCENV_IMAGE=hyperledger/fabric-ccenv:x86_64-1.0.2
    - SECRETSDIR=/run/secrets
    - RABBITMQQUEUE=seller_queue
    - SOCKETPORT=3030
    - MESSAGEEXPIRY=300
    - EVENTEMITTER=true
    volumes:
    - /var/run/:/host/var/run/
    depends_on:
    - blockchain-setup
    - rabbitmq
    - redis-server
    secrets:
      - config
      - channel

  fitcoin-backend :
    #container_name: fitcoin-backend
    image: backend
    environment:
    - ORGID=org.FitCoinOrg
    - DOCKER_SOCKET_PATH=/host/var/run/docker.sock
    - DOCKER_CCENV_IMAGE=hyperledger/fabric-ccenv:x86_64-1.0.2
    - SECRETSDIR=/run/secrets
    - RABBITMQQUEUE=user_queue
    - MESSAGEEXPIRY=300
    volumes:
    - /var/run/:/host/var/run/
    depends_on:
    - blockchain-setup
    - rabbitmq
    - redis-server
    secrets:
      - config
      - channel

  rabbit-client :
    container_name: rabbit-client
    image: rabbit-client
    environment:
    - SECRETSDIR=/run/secrets
    ports:
    - 3000:3000
    depends_on:
    - rabbitmq
    - redis-server
    secrets:
      - config
      - channel

secrets:
  config:
    file: ./configuration/config.json
  channel:
    file: ./configuration/channel.tx
